// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User model to store Spotify user and authentication details
model User {
  id                 String      @id @default(auto()) @map("_id") @db.ObjectId
  spotifyId          String      @unique
  email              String      @unique
  name               String?
  accessToken        String?
  refreshToken       String?
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  topArtists         TopArtist[]
  topTracks          TopTrack[]
  lastTopItemsUpdate DateTime?
}

model TopArtist {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  spotifyId  String
  name       String
  imageUrl   String?
  popularity Int?
  genres     String[]
  timeRange  TimeRange
  rank       Int
  user       User      @relation(fields: [userId], references: [id])
  userId     String    @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, spotifyId, timeRange])
  @@index([userId, timeRange])
}

model TopTrack {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  spotifyId  String
  name       String
  artistName String
  albumName  String?
  imageUrl   String?
  popularity Int?
  timeRange  TimeRange
  rank       Int
  user       User      @relation(fields: [userId], references: [id])
  userId     String    @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, spotifyId, timeRange])
  @@index([userId, timeRange])
}

enum TimeRange {
  SHORT_TERM
  MEDIUM_TERM
  LONG_TERM
}
